name: CI
on:
  pull_request:
    branches:
      - "**"

jobs:
  pull-request:
    name: PR checks
    if: "github.event_name == 'pull_request'"
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os:
          - ubuntu-22.04

    steps:
      - name: Checkout source code
        uses: actions/checkout@v3
      - name: Install Rust
        run: |
          rustup update
          rustup component add rustfmt
          rustup component add clippy
          rustup target add wasm32-unknown-unknown
          if [[ "$RUNNER_OS" = "macOS" ]]; then
            rustup target add \
              aarch64-apple-darwin  \
              aarch64-apple-ios     \
              aarch64-apple-ios-sim \
              x86_64-apple-darwin   \
              x86_64-apple-ios
          fi

      - name: Use cargo cache
        uses: Swatinem/rust-cache@v2
        with:
          # Determines whether workspace `target` directories are cached.
          # If `false`, only the cargo registry will be cached.
          cache-targets: true

          # Determines if the cache should be saved even when the workflow has failed.
          cache-on-failure: false

          # Determines which crates are cached.
          # If `true` all crates will be cached, otherwise only dependent crates will be cached.
          # Useful if additional crates are used for CI tooling.
          cache-all-crates: false

          # Determiners whether the cache should be saved.
          # If `false`, the cache is only restored.
          # Useful for jobs where the matrix is additive e.g. additional Cargo features,
          # or when only runs from `master` should be saved to the cache.
          # default: "true"
          # To only cache runs from `master`:
          save-if: "true"

      - name: Install cargo deny
        run: cargo install cargo-deny

      # - name: Cargo deny
      #   run: cargo deny check

      - name: Cargo outdated
        run: cargo outdated

      - name: Cargo Test
        run: cargo test
